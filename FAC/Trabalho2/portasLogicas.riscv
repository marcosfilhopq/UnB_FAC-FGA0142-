.data
	soma: .asciz "ADD: "
	subtrair: .asciz "SUB: "
	pAND: .asciz "AND: "
	pOR: .asciz "OR: "
	pXOR: .asciz "XOR: "
	mask: .asciz "MASK: "
	sl: .asciz "SLL("
	sr: .asciz "SRL("
	sf: .asciz "): "
	
.text
.globl main

main:
	#Lê primeiro numero
	li a7,5 #Chamada para ler inteiro
	ecall
	mv s0,a0 #Move para s0 o resultado de a0, variavel usada no li
	
	#Lê segundo numero
	li a7, 5
	ecall
	mv s1, a0
	
	#Lê terceio numero
	li a7, 5
	ecall
	mv t2, a0
	
	#Soma
	add t3,s0,s1 #grava em t3, os resultados em t0 e t1
	
	#Subtracao
	sub t4,s0,s1
	
	#AND
	and t5,s0,s1
	
	#OR
	or t6,s0,s1
	
	#XOR
	xor x5,s0,s1
	
	#MASK
	li s2, 31
	and s3, t2, s2
	
	#SLL(Shift para Left)
	sll s4, s0, s3 #s4 = s0(a) << s3(mask)
	
	#SRL(Shift para Direita)
	srl s5, s1, s3 #s2 = s1(b) >> s3(mask)
	
	#Imprime ADD
	li a7, 4 #Imprime strig
	la a0, soma #Qual string ele imprime
	ecall
	
	li a7, 1 #Chamada para imprimir inteiro
	mv a0, t3 #Imprime o t3
	ecall
	
	li a7,11 #Imprimir linha
	li a0,10 #\n em ASCII
	ecall
	
	#Imprime SUB
	li a7, 4
	la a0, subtrair
	ecall
	
	li a7,1
	mv a0,t4
	ecall
	
	li a7,11
	li a0,10
	ecall
	
	#Imprime ADD
	li a7, 4
	la a0, pAND
	ecall
	
	li a7,1
	mv a0,t5
	ecall
	
	li a7,11
	li a0,10
	ecall
	
	#Imprime OR
	li a7, 4
	la a0, pOR
	ecall
	
	li a7,1
	mv a0,t6
	ecall
	
	li a7,11
	li a0,10
	ecall
	
	#Imprime XOR
	li a7, 4
	la a0, pXOR
	ecall
	
	li a7,1
	mv a0,x5
	ecall
	
	li a7,11
	li a0,10
	ecall
	
	#Imprime MASK
	li a7, 4
	la a0, mask
	ecall
	
	li a7,1
	mv a0,s3
	ecall
	
	li a7,11
	li a0,10
	ecall
	
	#Imprime SLL
	li a7, 4
	la a0, sl
	ecall
	
	li a7,1
	mv a0, s3
	ecall
	
	li a7,4
	la a0, sf
	ecall
	
	li a7,1
	mv a0,s4
	ecall
	
	li a7,11
	li a0,10
	ecall
	
	#Imprime SRL
	li a7, 4
	la a0, sr
	ecall
	
	li a7,1
	mv a0, s3
	ecall
	
	li a7,4
	la a0, sf
	ecall
	
	li a7,1
	mv a0,s5
	ecall
	
	li a7,11
	li a0,10
	ecall
	
	#Finaliza
	li a0, 0
	li a7,10
	ecall
